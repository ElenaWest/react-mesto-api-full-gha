{"ast":null,"code":"const baseUrl = 'api.mesto.elenavasilenko.nomoredomainsicu.ru';\nfunction getResponseData(res) {\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`);\n}\nfunction registration(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponseData(res));\n}\nfunction authorization(password, email) {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponseData(res));\n}\nfunction getUserData(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n}\nexport { registration, authorization, getUserData };","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","statusText","registration","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","getUserData","token"],"sources":["C:/Users/helen/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const baseUrl = 'api.mesto.elenavasilenko.nomoredomainsicu.ru'\r\n\r\nfunction getResponseData(res) {\r\n    return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n}\r\n\r\nfunction registration(password, email) {\r\n    return fetch(`${baseUrl}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email,\r\n        })\r\n    })\r\n    .then(res => getResponseData(res))\r\n}\r\n\r\nfunction authorization(password, email) {\r\n    return fetch(`${baseUrl}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email,\r\n        })\r\n    })\r\n    .then(res => getResponseData(res))\r\n}\r\n\r\nfunction getUserData(token) {\r\n    return fetch(`${baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\" : `Bearer ${token}`\r\n        }})\r\n    .then(res => getResponseData(res))\r\n}\r\n\r\n\r\nexport { registration, authorization, getUserData }"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8CAA8C;AAE9D,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,GAAEJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;AAClF;AAEA,SAASC,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,OAAOC,KAAK,CAAE,GAAEZ,OAAQ,SAAQ,EAAE;IAC9Ba,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACtC;AAEA,SAASiB,aAAaA,CAACT,QAAQ,EAAEC,KAAK,EAAE;EACpC,OAAOC,KAAK,CAAE,GAAEZ,OAAQ,SAAQ,EAAE;IAC9Ba,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACtC;AAEA,SAASkB,WAAWA,CAACC,KAAK,EAAE;EACxB,OAAOT,KAAK,CAAE,GAAEZ,OAAQ,WAAU,EAAE;IAChCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASO,KAAM;IACtC;EAAC,CAAC,CAAC,CACNH,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACtC;AAGA,SAASO,YAAY,EAAEU,aAAa,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}