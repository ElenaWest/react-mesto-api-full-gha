{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helen\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport Card from './Card.jsx';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Spinner from './Spinner/Spinner.jsx';\nimport Register from './Register.jsx';\nimport Login from './Login.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    name,\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    onDelete,\n    cards,\n    isLoading,\n    handleLogin,\n    handleRegister\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children:\n    // name === 'main' ? \n    // <>\n    // <section className=\"profile page__sizing\">\n    //                 <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\n    //                    <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\n    //                  </button>\n    //                  <div className=\"profile__info\">\n    //                  <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\n    //                      <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\n    //                      <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\n    //                  </div>\n    //                  <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\n    //              </section>\n    //              <section className=\"elements\">\n    //                  <ul className=\"elements__list page__sizing\">\n    //                      {isLoading ? <Spinner /> : cards.map(data => {\n    //              return(\n    //                  <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\n    //             )\n    //         })}\n    //                     {/*<Spinner /> Для настройки спиннера*/}\n    //                  </ul>\n    //             </section>\n    //          </>\n    //          :\n    //          name === 'signin' ?\n    //          <Login name={name} handleLogin={handleLogin} />\n    //          :\n    //          <Register name={name} handleRegister={handleRegister} />\n\n    {\n      main: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile page__sizing\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__avatar-overlay\",\n            type: \"button\",\n            onClick: onEditAvatar,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile__avatar\",\n              src: currentUser.avatar ? currentUser.avatar : '#',\n              alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: currentUser.name ? currentUser.name : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__status\",\n              children: currentUser.about ? currentUser.about : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-button\",\n              type: \"button\",\n              \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__add-button\",\n            type: \"button\",\n            \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n            onClick: onAddPlace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"elements\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"elements__list page__sizing\",\n            children: cards.map(data => {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                card: data,\n                onCardClick: onCardClick,\n                onDelete: onDelete\n              }, data._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true),\n      signup: /*#__PURE__*/_jsxDEV(Register, {\n        name: name,\n        handleRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this),\n      signin: /*#__PURE__*/_jsxDEV(Login, {\n        name: name,\n        handleLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }[name]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useContext","Card","CurrentUserContext","Spinner","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_ref","_s","name","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onDelete","cards","isLoading","handleLogin","handleRegister","currentUser","className","children","main","type","onClick","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","about","map","data","card","_id","signup","signin","_c","$RefreshReg$"],"sources":["C:/Users/helen/dev/react-mesto-auth/src/components/Main.jsx"],"sourcesContent":["import { useContext } from 'react';\r\nimport Card from './Card.jsx'\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\nimport Spinner from './Spinner/Spinner.jsx';\r\nimport Register from './Register.jsx';\r\nimport Login from './Login.jsx';\r\n\r\n\r\nfunction Main({ name, onEditProfile, onAddPlace, onEditAvatar, onCardClick, onDelete, cards, isLoading, handleLogin, handleRegister }) {\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return (\r\n        <main className=\"main\">\r\n\r\n            { \r\n            // name === 'main' ? \r\n            // <>\r\n            // <section className=\"profile page__sizing\">\r\n            //                 <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n            //                    <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n            //                  </button>\r\n            //                  <div className=\"profile__info\">\r\n            //                  <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n            //                      <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n            //                      <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n            //                  </div>\r\n            //                  <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n            //              </section>\r\n            //              <section className=\"elements\">\r\n            //                  <ul className=\"elements__list page__sizing\">\r\n            //                      {isLoading ? <Spinner /> : cards.map(data => {\r\n            //              return(\r\n            //                  <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n            //             )\r\n            //         })}\r\n            //                     {/*<Spinner /> Для настройки спиннера*/}\r\n            //                  </ul>\r\n            //             </section>\r\n            //          </>\r\n            //          :\r\n            //          name === 'signin' ?\r\n            //          <Login name={name} handleLogin={handleLogin} />\r\n            //          :\r\n            //          <Register name={name} handleRegister={handleRegister} />\r\n                \r\n\r\n\r\n            {\r\n                main:\r\n                    <>\r\n                        <section className=\"profile page__sizing\">\r\n                            <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n                                <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n                            </button>\r\n                            <div className=\"profile__info\">\r\n                                <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n                                <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n                                <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n                            </div>\r\n                            <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n                        </section>\r\n                        <section className=\"elements\">\r\n                            <ul className=\"elements__list page__sizing\">\r\n                                {/* {isLoading ? <Spinner /> : cards.map(data => {\r\n                        return(\r\n                            <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n                        )\r\n                    })} */}\r\n\r\n                    {cards.map(data => {\r\n                        return(\r\n                            <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n                        )\r\n                    })}\r\n                                {/*<Spinner /> Для настройки спиннера*/}\r\n                            </ul>\r\n                        </section>\r\n                    </>,\r\n                signup: <Register name={name} handleRegister={handleRegister} />,\r\n                signin: <Login name={name} handleLogin={handleLogin} />\r\n            }[name]\r\n        }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}