{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helen\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport Card from './Card.jsx';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Spinner from './Spinner/Spinner.jsx';\nimport Register from './Register.jsx';\nimport Login from './Login.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    name,\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    onDelete,\n    cards,\n    isLoading,\n    handleLogin,\n    handleRegister\n  } = _ref;\n  console.log(cards);\n  console.log(name);\n  const currentUser = useContext(CurrentUserContext);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: name === 'main' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile page__sizing\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__avatar-overlay\",\n          type: \"button\",\n          onClick: onEditAvatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__avatar\",\n            src: currentUser.avatar ? currentUser.avatar : '#',\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: currentUser.name ? currentUser.name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__status\",\n            children: currentUser.about ? currentUser.about : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__edit-button\",\n            type: \"button\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__add-button\",\n          type: \"button\",\n          \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          onClick: onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"elements__list page__sizing\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 47\n          }, this) : cards.map(data => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              card: data,\n              onCardClick: onCardClick,\n              onDelete: onDelete\n            }, data._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 30\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true) : name === 'signin' ? /*#__PURE__*/_jsxDEV(Login, {\n      name: name,\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      name: name,\n      handleRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this)\n\n    //     {\n    //         main:\n    //             <>\n    //                 <section className=\"profile page__sizing\">\n    //                     <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\n    //                         <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\n    //                     </button>\n    //                     <div className=\"profile__info\">\n    //                         <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\n    //                         <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\n    //                         <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\n    //                     </div>\n    //                     <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\n    //                 </section>\n    //                 <section className=\"elements\">\n    //                     <ul className=\"elements__list page__sizing\">\n    //                         {/* {isLoading ? <Spinner /> : cards.map(data => {\n    //                 return(\n    //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\n    //                 )\n    //             })} */}\n\n    //             {cards.map(data => {\n    //                 return(\n    //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\n    //                 )\n    //             })}\n    //                         {/*<Spinner /> Для настройки спиннера*/}\n    //                     </ul>\n    //                 </section>\n    //             </>,\n    //         signup: <Register name={name} handleRegister={handleRegister} />,\n    //         signin: <Login name={name} handleLogin={handleLogin} />\n    //     }[name]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useContext","Card","CurrentUserContext","Spinner","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_ref","_s","name","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onDelete","cards","isLoading","handleLogin","handleRegister","console","log","currentUser","className","children","type","onClick","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","about","map","data","card","_id","_c","$RefreshReg$"],"sources":["C:/Users/helen/dev/react-mesto-auth/src/components/Main.jsx"],"sourcesContent":["import { useContext } from 'react';\r\nimport Card from './Card.jsx'\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\nimport Spinner from './Spinner/Spinner.jsx';\r\nimport Register from './Register.jsx';\r\nimport Login from './Login.jsx';\r\n\r\n\r\nfunction Main({ name, onEditProfile, onAddPlace, onEditAvatar, onCardClick, onDelete, cards, isLoading, handleLogin, handleRegister }) {\r\n    console.log(cards)\r\n    console.log(name)\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return (\r\n        <main className=\"main\">\r\n\r\n            { \r\n            name === 'main' ? \r\n            <>\r\n            <section className=\"profile page__sizing\">\r\n                            <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n                               <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n                             </button>\r\n                             <div className=\"profile__info\">\r\n                             <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n                                 <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n                                 <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n                             </div>\r\n                             <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n                         </section>\r\n                         <section className=\"elements\">\r\n                             <ul className=\"elements__list page__sizing\">\r\n                                 {isLoading ? <Spinner /> : cards.map(data => {\r\n                         return(\r\n                             <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n                        )\r\n                    })}\r\n                                {/*<Spinner /> Для настройки спиннера*/}\r\n                             </ul>\r\n                        </section>\r\n                     </>\r\n                     :\r\n                     name === 'signin' ?\r\n                     <Login name={name} handleLogin={handleLogin} />\r\n                     :\r\n                     <Register name={name} handleRegister={handleRegister} />\r\n                \r\n\r\n\r\n        //     {\r\n        //         main:\r\n        //             <>\r\n        //                 <section className=\"profile page__sizing\">\r\n        //                     <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n        //                         <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n        //                     </button>\r\n        //                     <div className=\"profile__info\">\r\n        //                         <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n        //                         <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n        //                         <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n        //                     </div>\r\n        //                     <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n        //                 </section>\r\n        //                 <section className=\"elements\">\r\n        //                     <ul className=\"elements__list page__sizing\">\r\n        //                         {/* {isLoading ? <Spinner /> : cards.map(data => {\r\n        //                 return(\r\n        //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n        //                 )\r\n        //             })} */}\r\n\r\n        //             {cards.map(data => {\r\n        //                 return(\r\n        //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n        //                 )\r\n        //             })}\r\n        //                         {/*<Spinner /> Для настройки спиннера*/}\r\n        //                     </ul>\r\n        //                 </section>\r\n        //             </>,\r\n        //         signup: <Register name={name} handleRegister={handleRegister} />,\r\n        //         signin: <Login name={name} handleLogin={handleLogin} />\r\n        //     }[name]\r\n        }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}