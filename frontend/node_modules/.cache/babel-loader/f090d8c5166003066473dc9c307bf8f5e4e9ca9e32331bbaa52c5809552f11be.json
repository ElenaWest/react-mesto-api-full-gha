{"ast":null,"code":"import{useContext}from'react';import Card from'./Card.jsx';import CurrentUserContext from'../contexts/CurrentUserContext.js';import Spinner from'./Spinner/Spinner.jsx';import Register from'./Register.jsx';import Login from'./Login.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Main(_ref){var name=_ref.name,onEditProfile=_ref.onEditProfile,onAddPlace=_ref.onAddPlace,onEditAvatar=_ref.onEditAvatar,onCardClick=_ref.onCardClick,onDelete=_ref.onDelete,cards=_ref.cards,isLoading=_ref.isLoading,handleLogin=_ref.handleLogin,handleRegister=_ref.handleRegister,onCardLike=_ref.onCardLike;var currentUser=useContext(CurrentUserContext);return/*#__PURE__*/_jsx(\"main\",{className:\"main\",children:name==='main'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"profile page__sizing\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"profile__avatar-overlay\",type:\"button\",onClick:onEditAvatar,children:/*#__PURE__*/_jsx(\"img\",{className:\"profile__avatar\",src:currentUser.avatar?currentUser.avatar:'#',alt:\"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile__info\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"profile__name\",children:currentUser.name?currentUser.name:''}),/*#__PURE__*/_jsx(\"p\",{className:\"profile__status\",children:currentUser.about?currentUser.about:''}),/*#__PURE__*/_jsx(\"button\",{className:\"profile__edit-button\",type:\"button\",\"aria-label\":\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",onClick:onEditProfile})]}),/*#__PURE__*/_jsx(\"button\",{className:\"profile__add-button\",type:\"button\",\"aria-label\":\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",onClick:onAddPlace})]}),/*#__PURE__*/_jsx(\"section\",{className:\"elements\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"elements__list page__sizing\",children:isLoading?/*#__PURE__*/_jsx(Spinner,{}):cards.map(function(data){return/*#__PURE__*/_jsx(Card,{card:data,onCardClick:onCardClick,onDelete:onDelete,onCardLike:onCardLike},data._id);})})})]}):name==='signin'?/*#__PURE__*/_jsx(Login,{name:name,handleLogin:handleLogin}):/*#__PURE__*/_jsx(Register,{name:name,handleRegister:handleRegister})});}export default Main;//     {\n//         main:\n//             <>\n//                 <section className=\"profile page__sizing\">\n//                     <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\n//                         <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\n//                     </button>\n//                     <div className=\"profile__info\">\n//                         <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\n//                         <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\n//                         <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\n//                     </div>\n//                     <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\n//                 </section>\n//                 <section className=\"elements\">\n//                     <ul className=\"elements__list page__sizing\">\n//                         {/* {isLoading ? <Spinner /> : cards.map(data => {\n//                 return(\n//                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\n//                 )\n//             })} */}\n//             {cards.map(data => {\n//                 return(\n//                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\n//                 )\n//             })}\n//                         {/*<Spinner /> Для настройки спиннера*/}\n//                     </ul>\n//                 </section>\n//             </>,\n//         signup: <Register name={name} handleRegister={handleRegister} />,\n//         signin: <Login name={name} handleLogin={handleLogin} />\n//     }[name]","map":{"version":3,"names":["useContext","Card","CurrentUserContext","Spinner","Register","Login","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Main","_ref","name","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onDelete","cards","isLoading","handleLogin","handleRegister","onCardLike","currentUser","className","children","type","onClick","src","avatar","alt","about","map","data","card","_id"],"sources":["C:/Users/helen/dev/react-mesto-auth/src/components/Main.jsx"],"sourcesContent":["import { useContext } from 'react';\r\nimport Card from './Card.jsx'\r\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\r\nimport Spinner from './Spinner/Spinner.jsx';\r\nimport Register from './Register.jsx';\r\nimport Login from './Login.jsx';\r\n\r\n\r\nfunction Main({ name, onEditProfile, onAddPlace, onEditAvatar, onCardClick, onDelete, cards, isLoading, handleLogin, handleRegister, onCardLike }) {\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            {name === 'main' ? \r\n            <>\r\n            <section className=\"profile page__sizing\">\r\n              <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n                <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n              </button>\r\n              <div className=\"profile__info\">\r\n                <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n                <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n                <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n              </div>\r\n              <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n              </section>\r\n              <section className=\"elements\">\r\n                <ul className=\"elements__list page__sizing\">\r\n                    {isLoading ? <Spinner /> : cards.map(data => {\r\n                        return(\r\n                            <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} onCardLike={onCardLike} />\r\n                        )\r\n                    })}\r\n                    {/*<Spinner /> Для настройки спиннера*/}\r\n                </ul>\r\n              </section>\r\n            </>\r\n            :\r\n            name === 'signin' ?\r\n            <Login name={name} handleLogin={handleLogin} />\r\n            :\r\n            <Register name={name} handleRegister={handleRegister} />\r\n        }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n\r\n//     {\r\n        //         main:\r\n        //             <>\r\n        //                 <section className=\"profile page__sizing\">\r\n        //                     <button className=\"profile__avatar-overlay\" type=\"button\" onClick={onEditAvatar}>\r\n        //                         <img className=\"profile__avatar\" src={currentUser.avatar ? currentUser.avatar : '#'} alt=\"Аватар\" />\r\n        //                     </button>\r\n        //                     <div className=\"profile__info\">\r\n        //                         <h1 className=\"profile__name\">{currentUser.name ? currentUser.name : ''}</h1>\r\n        //                         <p className=\"profile__status\">{currentUser.about ? currentUser.about : ''}</p>\r\n        //                         <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать\" onClick={onEditProfile} />\r\n        //                     </div>\r\n        //                     <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n        //                 </section>\r\n        //                 <section className=\"elements\">\r\n        //                     <ul className=\"elements__list page__sizing\">\r\n        //                         {/* {isLoading ? <Spinner /> : cards.map(data => {\r\n        //                 return(\r\n        //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n        //                 )\r\n        //             })} */}\r\n\r\n        //             {cards.map(data => {\r\n        //                 return(\r\n        //                     <Card key={data._id} card={data} onCardClick={onCardClick} onDelete={onDelete} />\r\n        //                 )\r\n        //             })}\r\n        //                         {/*<Spinner /> Для настройки спиннера*/}\r\n        //                     </ul>\r\n        //                 </section>\r\n        //             </>,\r\n        //         signup: <Register name={name} handleRegister={handleRegister} />,\r\n        //         signin: <Login name={name} handleLogin={handleLogin} />\r\n        //     }[name]"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}